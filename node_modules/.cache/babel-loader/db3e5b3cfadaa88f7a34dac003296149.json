{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinsmoker\\\\Desktop\\\\wb\\\\frontend\\\\src\\\\components\\\\workingSpace\\\\WorkingSpace.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from './WorkingSpace.module.scss';\nimport { ScreenVersion } from '../../Enums/ScreenEnums';\nimport Menu from './workingSpace-menu/Menu';\nimport Panel from './workingSpace-panel/Panel';\nimport { useState } from 'react';\nimport { MenuEnum } from '../../Enums/MenuEnums';\nimport WorkingSpaceContext from '../../Context/WorkingSpaceContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorkingSpace(_ref) {\n  _s();\n\n  let {\n    version = ScreenVersion.DESKTOP\n  } = _ref;\n  const [menuState, setMenuState] = useState(MenuEnum.Brands);\n\n  const handlerClickMenu = newStateMenu => setMenuState(newStateMenu);\n\n  const [controlPanelState, setControlPanelState] = useState('Создать');\n\n  const handlerClickControlPanel = newStateControlPanel => setControlPanelState(newStateControlPanel);\n\n  const value = {\n    menuState,\n    setMenuState: handlerClickMenu,\n    controlPanelState,\n    setControlPanelState: handlerClickControlPanel\n  };\n  return /*#__PURE__*/_jsxDEV(WorkingSpaceContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['workingSpace__' + version],\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorkingSpace, \"r3+qThQnHOh3OxcPOhQPVf7qlIA=\");\n\n_c = WorkingSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkingSpace\");","map":{"version":3,"names":["styles","ScreenVersion","Menu","Panel","useState","MenuEnum","WorkingSpaceContext","WorkingSpace","version","DESKTOP","menuState","setMenuState","Brands","handlerClickMenu","newStateMenu","controlPanelState","setControlPanelState","handlerClickControlPanel","newStateControlPanel","value"],"sources":["C:/Users/Vinsmoker/Desktop/wb/frontend/src/components/workingSpace/WorkingSpace.tsx"],"sourcesContent":["import styles from './WorkingSpace.module.scss'\r\nimport { ScreenVersion } from '../../Enums/ScreenEnums'\r\nimport Menu from './workingSpace-menu/Menu'\r\nimport Panel from './workingSpace-panel/Panel'\r\nimport { useState } from 'react'\r\nimport { MenuEnum } from '../../Enums/MenuEnums'\r\nimport WorkingSpaceContext from '../../Context/WorkingSpaceContext'\r\n\r\n\r\ninterface WorkingSpaceProps {\r\n    version?: ScreenVersion\r\n}\r\n\r\nexport default function WorkingSpace({ version = ScreenVersion.DESKTOP }: WorkingSpaceProps) {\r\n\r\n    const [menuState, setMenuState] = useState(MenuEnum.Brands)\r\n    const handlerClickMenu = (newStateMenu: MenuEnum) => setMenuState(newStateMenu)\r\n\r\n    const [controlPanelState, setControlPanelState] = useState('Создать')\r\n    const handlerClickControlPanel = (newStateControlPanel: string) => setControlPanelState(newStateControlPanel)\r\n\r\n    const value = {\r\n        menuState,\r\n        setMenuState: handlerClickMenu,\r\n        controlPanelState,\r\n        setControlPanelState: handlerClickControlPanel\r\n    }\r\n\r\n    return (\r\n        <WorkingSpaceContext.Provider value={value}>\r\n            <div className={styles['workingSpace__' + version]}>\r\n                <Menu></Menu>\r\n                <Panel></Panel>\r\n            </div>\r\n        </WorkingSpaceContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;;AAOA,eAAe,SAASC,YAAT,OAA8E;EAAA;;EAAA,IAAxD;IAAEC,OAAO,GAAGP,aAAa,CAACQ;EAA1B,CAAwD;EAEzF,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACC,QAAQ,CAACO,MAAV,CAA1C;;EACA,MAAMC,gBAAgB,GAAIC,YAAD,IAA4BH,YAAY,CAACG,YAAD,CAAjE;;EAEA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,SAAD,CAA1D;;EACA,MAAMa,wBAAwB,GAAIC,oBAAD,IAAkCF,oBAAoB,CAACE,oBAAD,CAAvF;;EAEA,MAAMC,KAAK,GAAG;IACVT,SADU;IAEVC,YAAY,EAAEE,gBAFJ;IAGVE,iBAHU;IAIVC,oBAAoB,EAAEC;EAJZ,CAAd;EAOA,oBACI,QAAC,mBAAD,CAAqB,QAArB;IAA8B,KAAK,EAAEE,KAArC;IAAA,uBACI;MAAK,SAAS,EAAEnB,MAAM,CAAC,mBAAmBQ,OAApB,CAAtB;MAAA,wBACI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GAvBuBD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}